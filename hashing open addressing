
//hashing
//open addressing

#include<stdio.h>
#include<stdlib.h>

int hash(int x)
{
return x%10;
}

void insert(int a[10],int x)
{
int i=hash(x);
int flag=0,j;
if(a[i]==-1)
{
a[i]=x;
flag=1;
}
else
{
for(j=i+1;j<10;j++)
{
if(a[j]==-1)
{
a[j]=x;
flag=1;
break;
}
}
for(j=0;(j<i)&&(flag==0);j++)
{
if(a[j]==-1)
{
a[j]=x;
flag=1;
break;
}
}
}
if(flag==0)
{
printf("no slot to insert\n");
}
}

void search(int a[10],int x)
{
int i=hash(x);
int flag=0,j;
if(a[i]==x)
{
printf("element found\n");
flag=1;
}
else
{
for(j=i+1;j<10;j++)
{
if(a[i]==x)
{
printf("element found\n");
flag=1;
break;
}
}
for(j=0;(j<i)&&(flag=0);j++)
{
if(a[j]==x)
{
flag=1;
break;
}
}
}
if(flag)
{
printf("element found\n");
}
else
{
printf("element not found\n");
}
}

void del(int a[10],int x)
{
int i=hash(x);
int flag=0,j;
if(a[i]==x)
{
a[i]=-1;
flag=1;
}
else
{
for(j=i+1;j<10;j++)
{
if(a[j]==x)
{
a[j]=-1;
flag=1;
break;
}
}
for(j=0;(j<i)&&(flag=0);j++)
{
if(a[j]==x)
{
a[j]=-1;
flag=1;
break;
}
}
}
if(flag==0)
{
printf("element not found\n");
}
}

void display(int a[10])
{
int i;
for(i=0;i<10;i++)
{
printf("%d\n",a[i]);
}
}

int main()
{
int i,a[10];
for(i=0;i<10;i++)
{
a[i]=-1;
}
int ch,x;
while(1)
{
printf("1:insert\n2:search\n3:delete\n4:display\n5:exit\n");
printf("enter ur choice\n");
scanf("%d",&ch);
switch(ch)
{
case 1:printf("enter element to insert\n");
scanf("%d",&x);
insert(a,x);
break;
case 2:printf("enter element to search\n");
scanf("%d",&x);
search(a,x);
break;
case 3:printf("enter element to delete\n");
scanf("%d",&x);
del(a,x);
break;
case 4:display(a);
break;
case 5:exit(0);
default:printf("enter valid choice\n");
}
}
}

